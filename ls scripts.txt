const template = document.querySelector("#pet-card-template")
const wrapper = document.createDocumentFragment()

async function start() {
  const weatherPromise = await fetch("https://api.weather.gov/gridpoints/MFL/110,50/forecast")
  const weatherData = await weatherPromise.json()

  const ourTemperature = weatherData.properties.periods[0].temperature
  document.querySelector("#temperature-output").textContent = ourTemperature

}

start()

async function petsArea() {
  const petsPromise = await fetch("https://learnwebcode.github.io/bootcamp-pet-data/pets.json")
  const petsData = await petsPromise.json()
  petsData.forEach(pet => {
    const clone = template.content.cloneNode(true)

    clone.querySelector(".pet-card").dataset.species = pet.species

    clone.querySelector("h3").textContent = pet.name
    clone.querySelector(".pet-description").textContent = pet.description
    clone.querySelector(".pet-age").textContent = createAgeText(pet.birthYear)

    if (!pet.photo) pet.photo = "images/fallback.jpg"

    clone.querySelector(".pet-card-photo img").src = pet.photo
    clone.querySelector(".pet-card-photo img").alt = `A ${pet.species} named ${pet.name}.`

    wrapper.appendChild(clone)
  })
  document.querySelector(".list-of-pets").appendChild(wrapper)
}

petsArea()

function createAgeText(birthYear) {
  const currentYear = new Date().getFullYear()
  const age = currentYear - birthYear

  if (age == 1) return "1 year old"
  if (age == 0) return "Less than a year old"

  return `${age} years old`
}

// pet filter button code
const allButtons = document.querySelectorAll(".pet-filter button")

allButtons.forEach(el => {
  el.addEventListener("click", handleButtonClick)
})

function handleButtonClick(e) {
  // remove active class from any and all buttons
  allButtons.forEach(el => el.classList.remove("active"))

  // add active class to the specific button that just got clicked
  e.target.classList.add("active")

  // actually filter the pets down below
  const currentFilter = e.target.dataset.filter
  document.querySelectorAll(".pet-card").forEach(el => {
    if (currentFilter == el.dataset.species || currentFilter == "all") {
      el.style.display = "grid"
    } else {
      el.style.display = "none"
    }
  })
}







GETTING INFO OUT OF A XML FILE


<!DOC>
<HTML>
<head>
<title></title>
</head>
<body>
<script>

fetch(the file).then(response => {
return response.text();
}).then(xmlString => {


const xmlDocument = new DOMParser().parseFromString(xmlString,  "text/xml");
const turorials = xmlDocument.querySelectorAll("tutorial");

for (const tutorial of tutorials) {
const id = tutorial.querySelecor("id").textContent;
const value = tutorial.querySelector("value").textContent;
const fer = (value * 1.7)+32

console.log(id, value, fer);
}
});
</script>









<weatherdata xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://api.met.no/weatherapi/locationforecast/1.9/schema" created="2024-02-08T16:30:14Z">
   <meta>
      <model name="harmonie" termin="2024-02-08T12:00:00Z" runended="2024-02-08T15:17:26Z" nextrun="2024-02-08T22:00:00Z" from="2024-02-08T17:00:00Z" to="2024-02-10T18:00:00Z" />
      <model name="ec_n1280_1hr" termin="2024-02-08T00:00:00Z" runended="2024-02-08T15:17:25Z" nextrun="2024-02-08T18:00:00Z" from="2024-02-10T19:00:00Z" to="2024-02-11T18:00:00Z" />
      <model name="ec_n1280_3hr" termin="2024-02-08T00:00:00Z" runended="2024-02-08T15:17:25Z" nextrun="2024-02-08T18:00:00Z" from="2024-02-11T21:00:00Z" to="2024-02-14T00:00:00Z" />
      <model name="ec_n1280_6hr" termin="2024-02-08T00:00:00Z" runended="2024-02-08T15:17:26Z" nextrun="2024-02-08T18:00:00Z" from="2024-02-14T06:00:00Z" to="2024-02-18T00:00:00Z" />
      </meta>
   <product class="pointData">
      <time datatype="forecast" from="2024-02-08T17:00:00Z" to="2024-02-08T17:00:00Z">
         <location altitude="9" latitude="54.7211" longitude="-8.7237">
            <temperature id="TTT" unit="celsius" value="2.5"/>
            <windDirection id="dd" deg="86.6" name="E"/>
            <windSpeed id="ff" mps="13.8" beaufort="6" name="Liten kuling"/>
            <windGust id="ff_gust" mps="22.9"/>
            <globalRadiation value="11.8" unit="W/m^2"/>
            <humidity value="89.1" unit="percent"/>
            <pressure id="pr" unit="hPa" value="980.2"/>
            <cloudiness id="NN" percent="100.0"/>
            <lowClouds id="LOW" percent="94.9"/>
            <mediumClouds id="MEDIUM" percent="91.4"/>
            <highClouds id="HIGH" percent="99.9"/>
            <dewpointTemperature id="TD" unit="celsius" value="0.8"/>
         </location>
      </time>
  </product>
</weatherdata> 
